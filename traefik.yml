version: "3.7"

services:
  dockersocketproxy:
    deploy:
      endpoint_mode: vip
      labels:
        fr.masamune.client: 'masamune'
        fr.masamune.maintainer: 'masamune.code@gmail.com'
        fr.masamune.project: 'docker socket proxy'
        fr.masamune.type: 'core'
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      rollback_config:
        delay: 0s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
      update_config:
        delay: 10s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
      placement:
        constraints:
          - node.role == manager
    environment:
      # Authorize access
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
    # LATER: docker socket proxy healthcheck
    #   https://github.com/Tecnativa/docker-socket-proxy/issues/24
    # healthcheck:
    #   test: 'curl -fail http://localhost:2375/version || exit 1'
    #   interval: 10s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 0s
    image: tecnativa/docker-socket-proxy
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'docker socket proxy'
      fr.masamune.type: 'core'
    networks:
      - dockersocket4traefiknet
    ports:
      # Publish on usual port
      - 2375
    security_opt:
      - no-new-privileges:true
      - apparmor=docker-default
      - seccomp=/etc/docker/seccomp-profiles/default-docker-profile.json
    # Assign the_docker_peon unprivileged user
    # user: 1003:1003
    volumes:
      # Access to socket, read-only for security
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  traefik:
    command:
      - "--entrypoints.web.address=:80"
      # Redirect http towards https
      # TODO: test
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      #- "--log.level=DEBUG"
      - "--ping=true"
      # Traefik socket access from the proxy container, on the defined port
      - "--providers.docker.endpoint=tcp://dockersocketproxy:2375"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmMode=true"
    depends_on:
      - dockersocketproxy
    deploy:
      endpoint_mode: vip
      labels:
        fr.masamune.client: 'masamune'
        fr.masamune.maintainer: 'masamune.code@gmail.com'
        fr.masamune.project: 'reverse proxy / traefik'
        fr.masamune.type: 'core'
      mode: replicated
      placement:
        constraints:
          - node.role == manager
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      rollback_config:
        delay: 0s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
      update_config:
        delay: 10s
        failure_action: pause
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 1
    healthcheck:
      test: 'traefik healthcheck --ping'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 0s
    # Traefik 2.2
    image: "traefik:chevrotin"
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'reverse proxy / traefik'
      fr.masamune.type: 'core'
    networks:
      # Traefik's docker socket access on dedicated network
      - dockersocket4traefiknet
      # Traefik access to web server containers, to allow reverse proxy serving
      - traefik-public
    ports:
      - "80:80"
      # - "443:443"
    security_opt:
      - no-new-privileges:true
      - apparmor=docker-default
      - seccomp=/etc/docker/seccomp-profiles/default-docker-profile.json
    # Assign the_docker_peon unprivileged user
    # user: 1003:1003

networks:
  dockersocket4traefiknet:
    # Prevent access to this network from other containers
    attachable: false
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'docker socket proxy dedicated network'
      fr.masamune.type: 'core'

  # Needs v before
  # > docker network create --driver=overlay traefik-public
  traefik-public:
    external: true
    labels:
      fr.masamune.client: 'masamune'
      fr.masamune.maintainer: 'masamune.code@gmail.com'
      fr.masamune.project: 'traefik outside internet access network'
      fr.masamune.type: 'core'